<?php
// Load Dolibarr environment
$res = 0;
// Try main.inc.php into web root known defined into CONTEXT_DOCUMENT_ROOT (not always defined)
if (!$res && !empty($_SERVER["CONTEXT_DOCUMENT_ROOT"])) {
	$res = @include $_SERVER["CONTEXT_DOCUMENT_ROOT"]."/main.inc.php";
}
// Try main.inc.php into web root detected using web root calculated from SCRIPT_FILENAME
$tmp = empty($_SERVER['SCRIPT_FILENAME']) ? '' : $_SERVER['SCRIPT_FILENAME']; $tmp2 = realpath(__FILE__); $i = strlen($tmp) - 1; $j = strlen($tmp2) - 1;
while ($i > 0 && $j > 0 && isset($tmp[$i]) && isset($tmp2[$j]) && $tmp[$i] == $tmp2[$j]) {
	$i--;
	$j--;
}
if (!$res && $i > 0 && file_exists(substr($tmp, 0, ($i + 1))."/main.inc.php")) {
	$res = @include substr($tmp, 0, ($i + 1))."/main.inc.php";
}
if (!$res && $i > 0 && file_exists(dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php")) {
	$res = @include dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php";
}
// Try main.inc.php using relative path
if (!$res && file_exists("../main.inc.php")) {
	$res = @include "../main.inc.php";
}
if (!$res && file_exists("../../main.inc.php")) {
	$res = @include "../../main.inc.php";
}
if (!$res && file_exists("../../../main.inc.php")) {
	$res = @include "../../../main.inc.php";
}
if (!$res) {
	die("Include of main fails");
}

require_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';
require_once DOL_DOCUMENT_ROOT.'/custom/creche/class/enfants.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/creche/lib/creche_enfants.lib.php';

// load module libraries
require_once __DIR__.'/class/contrats.class.php';

// for other modules
//dol_include_once('/othermodule/class/otherobject.class.php');

// Load translation files required by the page
$langs->loadLangs(array("creche@creche", "other"));

// Get parameters
$action     = GETPOST('action', 'aZ09') ? GETPOST('action', 'aZ09') : 'view'; // The action 'create'/'add', 'edit'/'update', 'view', ...
$massaction = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files = GETPOST('show_files', 'int'); // Show files area generated by bulk actions ?
$confirm    = GETPOST('confirm', 'alpha'); // Result of a confirmation
$cancel     = GETPOST('cancel', 'alpha'); // We click on a Cancel button
$toselect   = GETPOST('toselect', 'array'); // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : str_replace('_', '', basename(dirname(__FILE__)).basename(__FILE__, '.php')); // To manage different context of search
$backtopage = GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss  = GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')
$mode       = GETPOST('mode', 'aZ'); // The output mode ('list', 'kanban', 'hierarchy', 'calendar', ...)

$id = GETPOST('id', 'int');
$ref = GETPOST('ref', 'alpha');

$enfantid = GETPOST('idEnfant', 'int');
$type = GETPOST('type', 'alpha');


// Load variable for pagination
$limit = GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page < 0 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha')) {
	// If $page is not defined, or '' or -1 or if we click on clear filters
	$page = 0;
}
$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;

// Initialize technical objects
$enfant = new Enfants($db);
$enfant->fetch($enfantid);
// $object = new Contrats($db);
$diroutputmassaction = $conf->creche->dir_output.'/temp/massgeneration/'.$user->id;
$hookmanager->initHooks(array('enfants_contrats')); 	// Note that conf->hooks_modules contains array of activated contexes

// There is several ways to check permission.
// Set $enablepermissioncheck to 1 to enable a minimum low level of checks
$enablepermissioncheck = 0;
if ($enablepermissioncheck) {
	$permissiontoread = $user->hasRight('creche', 'contrats', 'read');
	$permissiontoadd = $user->hasRight('creche', 'contrats', 'write');
	$permissiontodelete = $user->hasRight('creche', 'contrats', 'delete');
} else {
	$permissiontoread = 1;
	$permissiontoadd = 1;
	$permissiontodelete = 1;
}

// Security check (enable the most restrictive one)
if ($user->socid > 0) accessforbidden();
//if ($user->socid > 0) accessforbidden();
//$socid = 0; if ($user->socid > 0) $socid = $user->socid;
//$isdraft = (($object->status == $object::STATUS_DRAFT) ? 1 : 0);
//restrictedArea($user, $object->module, 0, $object->table_element, $object->element, 'fk_soc', 'rowid', $isdraft);
if (!isModEnabled("creche")) {
	accessforbidden('Module creche not enabled');
}
if (!$permissiontoread) accessforbidden();


/*
 * Actions
 */
//TODO: gérer champs obligatoires + msg avec fonction setEventMessages($msg, null, 'errors');
 if ($action == 'create') {
	$date_start = GETPOST('date_start');
	$date_end = GETPOST('date_end');
	$$hours_of_day = '';
	$days_of_week = '';

	$sql = "INSERT INTO " . $db->prefix() . "creche_contrats 
	(fk_enfants, entity, type, date_start, date_end, days_of_week, hours_of_day, date_created, dossier_complet)
	VALUES (" . $enfant->id . ", " . $enfant->entity . ", '" . $type . "', '" . $date_start . "', '" . $date_end . "', ";

	if ($type == 'regulier') {
		$nb_day = 'NULL';
		$day_1 = null;
		$day_2 = null;
		$day_3 = null;
		$day_4 = null;
		$day_5 = null;
		$tmpHours = array();
		$tmpDays = array();
		if (GETPOST('hours_of_day_start_1') != '' && GETPOST('hours_of_day_end_1') != '') {
			$tmpHours[1] = array(
				'start' => GETPOST('hours_of_day_start_1'),
				'end' => GETPOST('hours_of_day_end_1')
			);
			$tmpDays[] = 1;
		}
		if (GETPOST('hours_of_day_start_2') != '' && GETPOST('hours_of_day_end_2') != '') {
			$tmpHours[2] = array(
				'start' => GETPOST('hours_of_day_start_2'),
				'end' => GETPOST('hours_of_day_end_2')
			);
			$tmpDays[] = 2;
		}
		if (GETPOST('hours_of_day_start_3') != '' && GETPOST('hours_of_day_end_3') != '') {
			$tmpHours[3] = array(
				'start' => GETPOST('hours_of_day_start_3'),
				'end' => GETPOST('hours_of_day_end_3')
			);
			$tmpDays[] = 3;
		}
		if (GETPOST('hours_of_day_start_4') != '' && GETPOST('hours_of_day_end_4') != '') {
			$tmpHours[4] = array(
				'start' => GETPOST('hours_of_day_start_4'),
				'end' => GETPOST('hours_of_day_end_4')
			);
			$tmpDays[] = 4;
		}
		if (GETPOST('hours_of_day_start_5') != '' && GETPOST('hours_of_day_end_5') != '') {
			$tmpHours[5] = array(
				'start' => GETPOST('hours_of_day_start_5'),
				'end' => GETPOST('hours_of_day_end_5')
			);
			$tmpDays[] = 5;
		}
		$hours_of_day = json_encode($tmpHours);
		$days_of_week = implode(';', $tmpDays);
	}

	$sql .= "'" . $days_of_week . "', '" . $hours_of_day . "', '" . date('Y-m-d') . "', 0)";
	$req = $db->query($sql);

	header('Location: enfant_contrats.php?idEnfant=' . $enfant->id);
	exit;
}




/*
 * View
 */

$form = new Form($db);

$now = dol_now();

$title = $langs->trans("Contrats");
//$help_url = "EN:Module_Contrats|FR:Module_Contrats_FR|ES:Módulo_Contrats";
$help_url = '';


// Output page
// --------------------------------------------------------------------
$title = $langs->trans("Enfants")." - ".$langs->trans('Contrats');
$help_url = '';

llxHeader('', $title, $help_url);

if (empty($permissiontoadd)) {
	accessforbidden('NotEnoughPermissions', 0, 1);
}

print load_fiche_titre($langs->trans("NewObject", $langs->transnoentitiesnoconv("Contrat")), '', 'object_'.$enfant->picto);
// echo '<pre>';var_dump($enfantid, $enfant);echo '</pre>';
?>
<hr><br />
<form method="post">
	<input type="hidden" name="action" value="choose_type">
	<input type="hidden" name="token" value="<?= newToken() ?>">
	<select name="type" onchange="this.form.submit()">
		<option>Choisir le type de contrat</option>
		<option value="occasionnel" <?= $type == 'occasionnel' ? 'selected' : '' ?>>Occasionnel</option>
		<option value="regulier" <?= $type == 'regulier' ? 'selected' : '' ?>>Régulier</option>
	</select>
</form><br />

<?php if ($action == 'choose_type' && $type != ''): ?>
	<form method="post">
	<input type="hidden" name="action" value="create">
	<input type="hidden" name="token" value="<?= newToken() ?>">
	<input type="hidden" name="type" value="<?= $type ?>">
	
	<table class="border centpercent">
		<tbody>
			<tr>
				<td class="fieldrequired">
					Date début de contrat
				</td>
				<td>
					<input type="date" name="date_start" value="<?= date('Y-m-d') ?>">
				</td>
			</tr>
			<tr>
				<td class="fieldrequired">
					Date fin de contrat
				</td>
				<td>
					<input type="date" name="date_end">
				</td>
			</tr>
			<?php if ($type == 'regulier'): ?>
				<!-- <tr>
					<td>
						Jours de la semaine
					</td>
					<td>
						<label for="days_of_week_1">Lundi</label>
						<input type="checkbox" name="days_of_week[]" value="1" id="days_of_week_1">
						<label for="days_of_week_2">Mardi</label>
						<input type="checkbox" name="days_of_week[]" value="2" id="days_of_week_2">
						<label for="days_of_week_3">Mercredi</label>
						<input type="checkbox" name="days_of_week[]" value="3" id="days_of_week_3">
						<label for="days_of_week_4">Jeudi</label>
						<input type="checkbox" name="days_of_week[]" value="4" id="days_of_week_4">
						<label for="days_of_week_5">Vendredi</label>
						<input type="checkbox" name="days_of_week[]" value="5" id="days_of_week_5">
					</td>
				</tr> -->
				<tr style="display: none;">
					<td>
						Heures de présence
					</td>
					<td>
						<table>
							<tr>
								<td>Lundi</td>
								<td>Mardi</td>
								<td>Mercredi</td>
								<td>Jeudi</td>
								<td>Vendredi</td>
							</tr>
							<tr>
								<td>
									<label for="hours_of_day_start_1">de</label>
									<input type="time" id="hours_of_day_start_1" name="hours_of_day_1[]" /><br />
									<label for="hours_of_day_end_1">à</label>
									<input type="time" id="hours_of_day_end_1" name="hours_of_day_1[]" />
								</td>
								<td>
									<label for="hours_of_day_start_2">de</label>
									<input type="time" id="hours_of_day_start_2" name="hours_of_day_2[]" /><br />
									<label for="hours_of_day_end_2">à</label>
									<input type="time" id="hours_of_day_end_2" name="hours_of_day_2[]" />
								</td>
								<td>
									<label for="hours_of_day_start_3">de</label>
									<input type="time" id="hours_of_day_start_3" name="hours_of_day_3[]" /><br />
									<label for="hours_of_day_end_3">à</label>
									<input type="time" id="hours_of_day_end_3" name="hours_of_day_3[]" />
								</td>
								<td>
									<label for="hours_of_day_start_4">de</label>
									<input type="time" id="hours_of_day_start_4" name="hours_of_day_4[]" /><br />
									<label for="hours_of_day_end_4">à</label>
									<input type="time" id="hours_of_day_end_4" name="hours_of_day_4[]" />
								</td>
								<td>
									<label for="hours_of_day_start_5">de</label>
									<input type="time" id="hours_of_day_start_5" name="hours_of_day_5[]" /><br />
									<label for="hours_of_day_end_5">à</label>
									<input type="time" id="hours_of_day_end_5" name="hours_of_day_5[]" />
								</td>
							</tr>
						</table>
						
					</td>
				</tr>
				<tr>
					<td class="fieldrequired">
						Heures de présence
					</td>
					<td>
						<table>
							<tr>
								<td></td>
								<td>Heure d'arrivée</td>
								<td>Heure de départ</td>
							</tr>
							<tr>
								<td>Lundi</td>
								<td>
									<input type="time" id="hours_of_day_start_1" name="hours_of_day_start_1" />
								</td>
								<td>
									<input type="time" id="hours_of_day_end_1" name="hours_of_day_end_1" />
								</td>
							</tr>
							<tr>
								<td>Mardi</td>
								<td>
									<input type="time" id="hours_of_day_start_2" name="hours_of_day_start_2" />
								</td>
								<td>
									<input type="time" id="hours_of_day_end_2" name="hours_of_day_end_2" />
								</td>
							</tr>
							<tr>
								<td>Mercredi</td>
								<td>
									<input type="time" id="hours_of_day_start_3" name="hours_of_day_start_3" />
								</td>
								<td>
									<input type="time" id="hours_of_day_end_3" name="hours_of_day_end_3" />
								</td>
							</tr>
							<tr>
								<td>Jeudi</td>
								<td>
									<input type="time" id="hours_of_day_start_4" name="hours_of_day_start_4" />
								</td>
								<td>
									<input type="time" id="hours_of_day_end_4" name="hours_of_day_end_4" />
								</td>
							</tr>
							<tr>
								<td>Vendredi</td>
								<td>
									<input type="time" id="hours_of_day_start_5" name="hours_of_day_start_5" />
								</td>
								<td>
									<input type="time" id="hours_of_day_end_5" name="hours_of_day_end_5" />
								</td>
							</tr>
						</table>
						
					</td>
				</tr>
			<?php endif; ?>
			<tr>
				<td colspan="2" class="center" style="border: none;">
					<input type="submit" class="butAction" name="submit" value="Valider">
				</td>
			</tr>
		</tbody>
	</table>
</form>
<?php endif; ?>

<?php
llxFooter();
$db->close();
