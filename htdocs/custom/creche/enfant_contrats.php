<?php
// Load Dolibarr environment
$res = 0;
// Try main.inc.php into web root known defined into CONTEXT_DOCUMENT_ROOT (not always defined)
if (!$res && !empty($_SERVER["CONTEXT_DOCUMENT_ROOT"])) {
	$res = @include $_SERVER["CONTEXT_DOCUMENT_ROOT"]."/main.inc.php";
}
// Try main.inc.php into web root detected using web root calculated from SCRIPT_FILENAME
$tmp = empty($_SERVER['SCRIPT_FILENAME']) ? '' : $_SERVER['SCRIPT_FILENAME']; $tmp2 = realpath(__FILE__); $i = strlen($tmp) - 1; $j = strlen($tmp2) - 1;
while ($i > 0 && $j > 0 && isset($tmp[$i]) && isset($tmp2[$j]) && $tmp[$i] == $tmp2[$j]) {
	$i--;
	$j--;
}
if (!$res && $i > 0 && file_exists(substr($tmp, 0, ($i + 1))."/main.inc.php")) {
	$res = @include substr($tmp, 0, ($i + 1))."/main.inc.php";
}
if (!$res && $i > 0 && file_exists(dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php")) {
	$res = @include dirname(substr($tmp, 0, ($i + 1)))."/main.inc.php";
}
// Try main.inc.php using relative path
if (!$res && file_exists("../main.inc.php")) {
	$res = @include "../main.inc.php";
}
if (!$res && file_exists("../../main.inc.php")) {
	$res = @include "../../main.inc.php";
}
if (!$res && file_exists("../../../main.inc.php")) {
	$res = @include "../../../main.inc.php";
}
if (!$res) {
	die("Include of main fails");
}

require_once DOL_DOCUMENT_ROOT.'/core/class/html.formcompany.class.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/date.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/lib/company.lib.php';
require_once DOL_DOCUMENT_ROOT.'/custom/creche/class/enfants.class.php';
require_once DOL_DOCUMENT_ROOT.'/custom/creche/lib/creche_enfants.lib.php';
require_once DOL_DOCUMENT_ROOT.'/custom/creche/core/modules/creche/doc/pdf_contrats.php';

// load module libraries
require_once __DIR__.'/class/contrats.class.php';

// for other modules
//dol_include_once('/othermodule/class/otherobject.class.php');

// Load translation files required by the page
$langs->loadLangs(array("creche@creche", "other"));

// Get parameters
$action     = GETPOST('action', 'aZ09') ? GETPOST('action', 'aZ09') : 'view'; // The action 'create'/'add', 'edit'/'update', 'view', ...
$massaction = GETPOST('massaction', 'alpha'); // The bulk action (combo box choice into lists)
$show_files = GETPOST('show_files', 'int'); // Show files area generated by bulk actions ?
$confirm    = GETPOST('confirm', 'alpha'); // Result of a confirmation
$cancel     = GETPOST('cancel', 'alpha'); // We click on a Cancel button
$toselect   = GETPOST('toselect', 'array'); // Array of ids of elements selected into a list
$contextpage = GETPOST('contextpage', 'aZ') ? GETPOST('contextpage', 'aZ') : str_replace('_', '', basename(dirname(__FILE__)).basename(__FILE__, '.php')); // To manage different context of search
$backtopage = GETPOST('backtopage', 'alpha'); // Go back to a dedicated page
$optioncss  = GETPOST('optioncss', 'aZ'); // Option for the css output (always '' except when 'print')
$mode       = GETPOST('mode', 'aZ'); // The output mode ('list', 'kanban', 'hierarchy', 'calendar', ...)

$id = GETPOST('id', 'int');
$ref = GETPOST('ref', 'alpha');

$enfantid = GETPOST('idEnfant', 'int');
$type = GETPOST('type', 'alpha');


// Load variable for pagination
$limit = GETPOST('limit', 'int') ? GETPOST('limit', 'int') : $conf->liste_limit;
$sortfield = GETPOST('sortfield', 'aZ09comma');
$sortorder = GETPOST('sortorder', 'aZ09comma');
$page = GETPOSTISSET('pageplusone') ? (GETPOST('pageplusone') - 1) : GETPOST("page", 'int');
if (empty($page) || $page < 0 || GETPOST('button_search', 'alpha') || GETPOST('button_removefilter', 'alpha')) {
	// If $page is not defined, or '' or -1 or if we click on clear filters
	$page = 0;
}
$offset = $limit * $page;
$pageprev = $page - 1;
$pagenext = $page + 1;

// Initialize technical objects
$enfant = new Enfants($db);
$enfant->fetch($enfantid);
// $object = new Contrats($db);
$diroutputmassaction = $conf->creche->dir_output.'/temp/massgeneration/'.$user->id;
$hookmanager->initHooks(array('enfants_contrats')); 	// Note that conf->hooks_modules contains array of activated contexes

// There is several ways to check permission.
// Set $enablepermissioncheck to 1 to enable a minimum low level of checks
$enablepermissioncheck = 0;
if ($enablepermissioncheck) {
	$permissiontoread = $user->hasRight('creche', 'contrats', 'read');
	$permissiontoadd = $user->hasRight('creche', 'contrats', 'write');
	$permissiontodelete = $user->hasRight('creche', 'contrats', 'delete');
} else {
	$permissiontoread = 1;
	$permissiontoadd = 1;
	$permissiontodelete = 1;
}

// Security check (enable the most restrictive one)
if ($user->socid > 0) accessforbidden();
//if ($user->socid > 0) accessforbidden();
//$socid = 0; if ($user->socid > 0) $socid = $user->socid;
//$isdraft = (($object->status == $object::STATUS_DRAFT) ? 1 : 0);
//restrictedArea($user, $object->module, 0, $object->table_element, $object->element, 'fk_soc', 'rowid', $isdraft);
if (!isModEnabled("creche")) {
	accessforbidden('Module creche not enabled');
}
if (!$permissiontoread) accessforbidden();


/*
 * Actions
 */

if ($action == 'sendEmail') { // Envoie du contrat par email
	$sql = "SELECT * FROM " . $db->prefix() . "creche_contrats WHERE rowid = " . GETPOST('id');
	$req = $db->query($sql);
	$contrat = $db->fetch_object($req);
	$dated = new DateTime($contrat->date_start);
	$url = "/usr/share/dolibarr/documents/creche/contrats/" . $contrat->rowid . "/contrat_" . $dated->format('Y_m_d') . ".pdf";
	$file = basename($url);

	$mails = array();
	$sql = "SELECT * FROM " . $db->prefix() . "creche_famille WHERE rowid = " . $enfant->fk_famille;
	$req = $db->query($sql);
	$famille = $db->fetch_object($req);
	if ($famille->mail != '') { // Récupérer le mail de la famille
		$mails[] = $famille->mail;
	}
	
	$sql = "SELECT * FROM " . $db->prefix() . "creche_parents WHERE fk_famille = " . $enfant->fk_famille;
	$req = $db->query($sql);
	while ($parent = $db->fetch_object($req)) { // Récupérer les mails des parents
		if ($parent->mail != '') {
			$mails[] = $parent->mail;
		}
	}

	include_once DOL_DOCUMENT_ROOT.'/core/class/html.formmail.class.php';
	$formmail = new FormMail($db);
	$formmail->trackid = $trackid;
	$formmail->add_attached_files($url, $file, dol_mimetype($file));
	
	
	require_once DOL_DOCUMENT_ROOT.'/core/class/CMailFile.class.php';
	$attachedfiles = $formmail->get_attached_files();
	$filepath = $attachedfiles['paths'];
	$filename = $attachedfiles['names'];
	$mimetype = $attachedfiles['mimes'];
	
	$sendto = implode(',', $mails);
	$subject = "Votre contrat crèche";
	$message = "Voici votre contrat crèche pour votre enfant";
	$from = $user->email;
	
	$mailfile = new CMailFile($subject, $sendto, $from, $message, $filepath, $mimetype, $filename);
	
	if (!empty($mailfile->error) || !empty($mailfile->errors)) {
		setEventMessages($mailfile->error, $mailfile->errors, 'errors');
	} else {
		$result = $mailfile->sendfile();
		if ($result) {
			$mesg = $langs->trans('MailSuccessfulySent', $mailfile->getValidAddress($from, 2), $mailfile->getValidAddress($sendto, 2));
			setEventMessages($mesg, null, 'mesgs');
			
			$moreparam = '';
			if (isset($paramname2) || isset($paramval2)) {
				$moreparam .= '&'.($paramname2 ? $paramname2 : 'mid').'='.$paramval2;
			}
			
			$selectRef = "SELECT ref FROM " . $db->prefix() . "actioncomm WHERE ref REGEXP '^[0-9]+$' ORDER BY cast(ref AS unsigned) DESC LIMIT 0,1";
			$refReq = $db->query($selectRef);
			$refLast = (int)$db->fetch_object($refReq)->ref; // dernière ref
			$refLast++; // faire +1 à la dernière ref
			$sql = "INSERT INTO " . $db->prefix() . "actioncomm (ref, datep, fk_action, code, label, note, fk_element, elementtype) 
			VALUES (" . $refLast . ", '" . date('Y-m-d H:i:s') . "', 67, 'CRECHE_FAMILLE_MAIL', '" . $db->escape($subject) . "', '" 
			. $db->escape($message) . "', " . $object->id . ", 'famille')";
			$req = $db->query($sql);
		} else {
			$langs->load("other");
			$mesg = '<div class="error">';
			if (!empty($mailfile->error) || !empty($mailfile->errors)) {
				$mesg .= $langs->transnoentities('ErrorFailedToSendMail', dol_escape_htmltag($from), dol_escape_htmltag($sendto));
				if (!empty($mailfile->error)) {
					$mesg .= '<br>'.$mailfile->error;
				}
				if (!empty($mailfile->errors) && is_array($mailfile->errors)) {
					$mesg .= '<br>'.implode('<br>', $mailfile->errors);
				}
			} else {
				$mesg .= $langs->transnoentities('ErrorFailedToSendMail', dol_escape_htmltag($from), dol_escape_htmltag($sendto));
				if (!empty($conf->global->MAIN_DISABLE_ALL_MAILS)) {
					$mesg .= '<br>Feature is disabled by option MAIN_DISABLE_ALL_MAILS';
				} else {
					$mesg .= '<br>Unkown Error, please refers to your administrator';
				}
			}
			$mesg .= '</div>';
			
			setEventMessages($mesg, null, 'warnings');
		}
	}

	header('Location: enfant_contrats.php?idEnfant=' . $enfant->id);
	exit;
 }

 if ($action == 'uploadPdf') { // Upload PDF signé
	$dossier = "/usr/share/dolibarr/documents/creche/contrats/" . GETPOST('idContrat') . "/";
	if (isset($_FILES['signed_contract'])) {
		if (file_exists($dossier)) {
			$fichier = GETPOST('final_path');
			if(move_uploaded_file($_FILES['signed_contract']['tmp_name'], $fichier)) {
				setEventMessages('Fichier uploader', null);
			}
		}
	}
	header('Location: enfant_contrats.php?idEnfant=' . $enfant->id);
	exit;
 }



/*
 * View
 */

$form = new Form($db);

$now = dol_now();

$title = $langs->trans("Contrats");
//$help_url = "EN:Module_Contrats|FR:Module_Contrats_FR|ES:Módulo_Contrats";
$help_url = '';


// Output page
// --------------------------------------------------------------------
$title = $langs->trans("Enfants")." - ".$langs->trans('Contrats');
$help_url = '';

llxHeader('', $title, $help_url);

$head = enfantsPrepareHead($enfant);
print dol_get_fiche_head($head, 'contrats', $langs->trans("Enfants"), -1, $enfant->picto, 0, '', '', 0, '', 1);

$linkback = '<a href="'.dol_buildpath('/creche/famille_enfants.php', 1).'?id=' . $enfant->fk_famille . '">'.$langs->trans("Retour à la famille").'</a>';

$sql = "SELECT * 
		FROM " . $db->prefix() . "creche_contrats 
		WHERE fk_enfants = " . $enfant->id;
$req = $db->query($sql);

dol_banner_tab($enfant, 'ref', $linkback, 1, 'ref', 'prenom', $morehtmlref);

// echo '<pre>';var_dump($enfantid, $enfant);echo '</pre>';
?>

<div class="fichecenter">
		<div class="underbanner clearboth"></div>
		<table class="centpercent notopnoleftnoright table-fiche-title">
			<tbody>
				<tr>
					<td class="nobordernopadding valignmiddle col-title"></td>
					<td class="nobordernopadding valignmiddle right col-right">
						<a class="btnTitle btnTitlePlus" 
						href="/custom/creche/enfants_nouvcontrat.php?token=<?= newToken() ?>&idEnfant=<?= $enfant->id ?>" 
						title="Nouveau Contrat">
							<span class="fa fa-plus-circle valignmiddle btnTitle-icon"></span>
						</a>
					</td>
				</tr>
			</tbody>
		</table>
		<!-- <hr> -->
		<table class="tagtable liste">
			<thead>
				<tr class="liste_titre">
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Type") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Date de début") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Date de fin") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Heures de présence") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Télécharger") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Contrat Signé") ?></th>
					<th class="wrapcolumntitle liste_titre"><?= $langs->trans("Mail") ?></th>
				</tr>
			</thead>
			<tbody>
				<?php while ($res = $db->fetch_object($req)): 
					$hours = json_decode($res->hours_of_day, true);
					$dated = new DateTime($res->date_start);
					$url = "/usr/share/dolibarr/documents/creche/contrats/" . $res->rowid ."/contrat_" . $dated->format('Y_m_d') . ".pdf";
					if (!file_exists($url)) {
						$pdf = new pdf_standard_contrats($db);
						$pdf->write_file($res, $langs);
					}
					?>
					<tr>
						<td>
							<?= $res->type ?>
						</td>
						<td><?= $res->date_start ?></td>
						<td><?= $res->date_end ?></td>
						<td>
							<?php if ($res->type == 'regulier'): ?>
								<?php if (isset($hours[1])): ?>
									Lundi de <?= $hours[1]['start'] ?> à <?= $hours[1]['end'] ?><br />
								<?php endif; ?>
								<?php if (isset($hours[2])): ?>
									Mardi de <?= $hours[2]['start'] ?> à <?= $hours[2]['end'] ?><br />
								<?php endif; ?>
								<?php if (isset($hours[3])): ?>
									Mercredi de <?= $hours[3]['start'] ?> à <?= $hours[3]['end'] ?><br />
								<?php endif; ?>
								<?php if (isset($hours[4])): ?>
									Jeudi de <?= $hours[4]['start'] ?> à <?= $hours[4]['end'] ?><br />
								<?php endif; ?>
								<?php if (isset($hours[5])): ?>
									Vendredi de <?= $hours[5]['start'] ?> à <?= $hours[5]['end'] ?>
								<?php endif; ?>
							<?php endif; ?>
						</td>
						<td>
							<a class="butAction" 
							href="/custom/creche/document.php?modulepart=creche&entity=<?= $enfant->entity ?>&file=<?= urlencode($url) ?>">PDF</a>
						</td>
						<td>
							<form enctype="multipart/form-data" method="post">
								<input type="hidden" name="final_path" value="<?= $url ?>" >
								<input type="hidden" name="token" value="<?= newToken() ?>" >
								<input type="hidden" name="action" value="uploadPdf" >
								<input type="hidden" name="idContrat" value="<?= $res->rowid ?>" >
								<input type="file" name="signed_contract" accept=".pdf" /><br />
								<input class="butAction" type="submit" value="Valider">
							</form>
						</td>
						<td>
						<a class="butAction" 
							href="/custom/creche/enfant_contrats.php?idEnfant=<?= $enfant->id ?>&action=sendEmail&id=<?= $res->rowid ?>">Email</a>
						</td>
					</tr>
				<?php endwhile; ?>
			</tbody>
		</table>
	</div>

<?php
llxFooter();
$db->close();
